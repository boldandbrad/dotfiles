################################################################
# aliae.yaml - shell aliases and setup                         #
################################################################

env:
  # default tools
  - name: BROWSER
    value: arc
  - name: EDITOR
    value: nvim
  - name: PAGER
    value: less

  # XDG paths
  - name: XDG_BIN_HOME
    value: "{{ .Home }}/.local/bin"
  - name: XDG_CACHE_HOME # where user-specific non-essential cached data should be written
    value: "{{ .Home }}/.local/var/cache"
  - name: XDG_CONFIG_HOME # where user-specific configurations should be written
    value: "{{ .Home }}/.config"
  - name: XDG_DATA_HOME # where user-specific data files should be written
    value: "{{ .Home }}/.local/share"
  - name: XDG_LIB_HOME
    value: "{{ .Home }}/.local/lib"
  - name: XDG_STATE_HOME # where user-specific state files should be written
    value: "{{ .Home }}/.local/state"

  # tool paths
  - name: DENO_INSTALL_ROOT
    value: '{{ env "XDG_DATA_HOME" }}/deno'
  - name: CARGO_HOME
    value: '{{ env "XDG_DATA_HOME" }}/cargo'
  # - name: CURL_HOME
  # value: $XDG_CONFIG_HOME/curl
  - name: GOPATH
    value: '{{ env "XDG_DATA_HOME" }}/go'
  - name: LESSHISTFILE
    value: "-" # disable less history
  - name: RUSTUP_HOME
    value: '{{ env "XDG_DATA_HOME" }}/rustup'
  - name: TMUX_PLUGIN_MANAGER_PATH
    value: '{{ env "XDG_DATA_HOME" }}/tmux/plugins'
  - name: VSCODE_EXTENSIONS
    value: '{{ env "XDG_DATA_HOME" }}/vscode'
  - name: ZDOTDIR
    value: '{{ env "XDG_CONFIG_HOME" }}/zsh'
    if: eq .Shell "zsh"

  # dotfiles
  - name: DOTFILES
    value: "{{ .Home }}/Setup/dotfiles"
  - name: HOMEBREW_BUNDLE_FILE
    value: '{{ env "DOTFILES" }}/util/macos/brew/Brewfile'

  # tool options
  - name: DO_NOT_TRACK # disable telemetry for tools that support this flag
    value: "1"
  - name: FZF_DEFAULT_OPTS # fzf catppuccin theme
    value: "--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8
      --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc
      --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"
  - name: ZVM_CURSOR_STYLE_ENABLED # disable zsh-vi-mode from changing cursor styles
    value: "false"

path:
  - value: |
      /opt/homebrew/bin
      $DOTFILES/bin
      $DENO_INSTALL_ROOT/bin
      $CARGO_HOME/bin
      $GOPATH/bin
      $HOME/.local/bin
      /usr/local/sbin
      /usr/local/bin
      /usr/sbin
      /usr/bin
      /sbin
      /bin
  - value: |
      /System/Cryptexes/App/usr/bin
    # are these needed?
    # /Library/Apple/usr/bin
    # /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin
    # /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin
    # /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin
    if: eq .OS "darwin"

# import aliae
# waiting on aliae [issue 191](https://github.com/JanDeDobbeleer/aliae/issues/191)
# aliae: !include_dir "./aliases"

alias:
  # nav shortcuts
  - name: ..
    value: cd ..
  - name: ...
    value: cd ../..
  - name: -- -
    value: cd -
  - name: app
    value: cd ~/Applications
  - name: dtp
    value: cd ~/Desktop
  - name: dvp
    value: cd ~/Developer
  - name: doc
    value: cd ~/Documents
  - name: dnl
    value: cd ~/Downloads
  - name: dtf
    value: cd $DOTFILES
  - name: cfg
    value: cd $XDG_CONFIG_HOME
  # - name: cdr
  # value: cd `git rev-parse --show-toplevel`

  # dotfiles
  - name: sys-refresh
    value: $DOTFILES/unpack.sh
  - name: dot-relink
    value: eval $(aliae init zsh --config $DOTFILES/config/aliae/aliae.yaml)
  - name: zsh-reload
    value: exec zsh
    if: eq .Shell "zsh"
  - name: git-reclone
    value: $DOTFILES/util/tools/github/clone_repos.sh

  # tool replacements
  - name: vim
    value: nvim
  - name: cat
    value: bat
  - name: help
    value: tldr
  - name: docker
    value: podman
  - name: ls
    value: eza --classify
  - name: la
    value: eza --all --classify
  - name: ll
    value: eza --all --long --header --classify
  - name: lt
    value: eza --tree --classify --sort=type --ignore-glob .git
  - name: lta
    value: eza --all --tree --classify --sort=type --ignore-glob .git
  - name: ld
    value: eza --only-dirs --classify
  - name: lda
    value: eza --all --only-dirs --classify
  - name: lm
    value: eza --all --reverse --long --header --sort=modified
  - name: lgt
    value: eza --all --git --long --tree --sort=type --no-permissions --no-filesize --no-user --no-time --git-ignore --ignore-glob .git

  # cmd defaults
  - name: mkdir
    value: mkdir -pv
  - name: mv
    value: mv -iv
  - name: cp
    value: cp -Riv
  - name: dust
    value: dust -r

  # other niceties
  - name: clr
    value: clear
  - name: cls
    value: clear; ls
    type: function
  - name: clg
    value: clear; git st
    type: function
  - name: cld
    value: clear; cd
    type: function
  - name: dud
    value: du -d 1 -h
  - name: duf
    value: du -sh *
  - name: lock
    value: zip -erj
  - name: unlock
    value: unzip -d

  # pretty print PATHs
  - name: path
    value: echo $PATH | tr -s ":" "\n"
  - name: fpath
    value: echo $FPATH | tr -s ":" "\n"

  # language specific
  - name: cgr
    value: cargo run
  - name: cgc
    value: cargo clippy --all-targets --all-features -- -D warnings
  - name: cgt
    value: cargo test --all
  - name: dna
    value: deno add
  - name: dnb
    value: deno bench
  - name: dnf
    value: deno fmt
  - name: dnc
    value: deno lint
  - name: dnt
    value: deno test
  - name: dnr
    value: deno run
  - name: dtb
    value: deno task build
  - name: dts
    value: deno task serve
  - name: gor
    value: go run .
  - name: gof
    value: go fmt
  - name: gog
    value: go get
  - name: gob
    value: go build
  - name: got
    value: go test
  - name: gov
    value: go vet
  - name: py
    value: uv run
  - name: pyc
    value: find . -name '*.pyc' -delete
  - name: pyv
    value: uv venv
  - name: pyf
    value: ruff format
  - name: pyl
    value: ruff check

  # macOS specific
  - name: awake
    value: caffeinate
    if: eq .OS "darwin"
  - name: cwd # copy current working directory path
    value: pwd | pbcopy
    if: eq .OS "darwin"
  - name: finder # open pwd in Finder.app
    value: open .
    if: eq .OS "darwin"
  - name: ql # open file in macOS quicklook
    value: qlmanage -p ${@} > /dev/null 2> /dev/null
    type: function
    if: eq .OS "darwin"
  - name: arc
    value: open -a Arc
    if: eq .OS "darwin"
  - name: safari
    value: open -a Safari
    if: eq .OS "darwin"
  - name: spc
    value: cd $HOME/Library/Mobile Documents/iCloud~md~obsidian/Documents/space
    if: eq .OS "darwin"
  - name: icloud
    value: cd $HOME/Library/Mobile Documents/com~apple~CloudDocs/
    if: eq .OS "darwin"
  - name: emptytrash
    value: sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*asl
    type: function
    if: eq .OS "darwin"
  - name: pkgs
    value: brew leaves
    if: eq .OS "darwin"
  - name: apps
    value: brew list --cask
    if: eq .OS "darwin"
  # - name: deps
  # value: brew deps --formula --for-each $(brew leaves)
  # if: eq .OS "darwin"
  - name: dep-check # check that all brewfile deps are installed
    value: brew bundle check -v
    if: eq .OS "darwin"
  - name: dep-refresh # install all brewfile deps
    value: brew bundle install
    if: eq .OS "darwin"
  - name: dep-prune # remove all brew managed deps not specified in brewfile
    value: brew bundle cleanup
    if: eq .OS "darwin"

  # other
  # - name: codexp # codium extension export
# value: codium --list-extensions > $DOTFILES/config/vscodium/extensions.txt && echo '\tExported VSCodium extensions list to DOTFILES.'
# - name: codein # codium extension install
# value: $DOTFILES/util/tools/vscodium/install_extensions.sh

# # list all
# alias la="ls -A" # list all
# # list all, with full details
# alias ll="ls -lAFh"
# # list normal dirs only
# alias ld="ls -l | grep '^d'"
# # list all dirs only
# alias lda="ls -lA | grep '^d'"
# # list all sorted by last modified
# alias lm="ls -tA -1"

# link dotfiles
link:
  # shell configs
  - name: "{{ .Home }}/.zshenv"
    target: '{{ env "DOTFILES" }}/config/zsh/.zshenv'
  - name: '{{ env "XDG_CONFIG_HOME" }}/zsh'
    target: '{{ env "DOTFILES" }}/config/zsh'
    mkdir: true
  - name: "{{ .Home }}/.bash_profile"
    target: '{{ env "DOTFILES" }}/config/bash/.bash_profile'
  - name: "{{ .Home }}/.bashrc"
    target: '{{ env "DOTFILES" }}/config/bash/.bashrc'

  # git configs
  - name: '{{ env "XDG_CONFIG_HOME" }}/git'
    target: '{{ env "DOTFILES" }}/config/git'
  - name: '{{ env "XDG_CONFIG_HOME" }}/lazygit'
    target: '{{ env "DOTFILES" }}/config/lazygit'

  # terminal configs
  - name: '{{ env "XDG_CONFIG_HOME" }}/wezterm'
    target: '{{ env "DOTFILES" }}/config/wezterm'
  - name: '{{ env "XDG_CONFIG_HOME" }}/tmux'
    target: '{{ env "DOTFILES" }}/config/tmux'
  - name: '{{ env "XDG_DATA_HOME" }}/tmux/tpm'
    target: '{{ env "DOTFILES" }}/vendor/tpm'
    mkdir: true
  - name: '{{ env "XDG_DATA_HOME" }}/tmux/plugins/tpm'
    target: '{{ env "DOTFILES" }}/vendor/tpm'
    mkdir: true

  # editor configs
  - name: '{{ env "XDG_CONFIG_HOME" }}/nvim'
    target: '{{ env "DOTFILES" }}/config/nvim'
  - name: "{{ .Home }}/Library/Application\ Support/VSCodium/User/settings.json"
    target: '{{ env "DOTFILES" }}/config/vscodium/settings.json'
    mkdir: true
    if: eq .OS "darwin"
  - name: '{{ env "XDG_CONFIG_HOME" }}/VSCodium/User/settings.json'
    target: '{{ env "DOTFILES" }}/config/vscodium/settings.json'
    mkdir: true
    if: eq .OS "linux"

  # other configs
  - name: '{{ env "XDG_CONFIG_HOME" }}/bat/config'
    target: '{{ env "DOTFILES" }}/config/bat/config'
    mkdir: true
  - name: '{{ env "XDG_CONFIG_HOME" }}/bat/themes'
    target: '{{ env "DOTFILES" }}/vendor/catppuccin-bat/themes'
  - name: '{{ env "XDG_CONFIG_HOME" }}/btop'
    target: '{{ env "DOTFILES" }}/config/btop'
  - name: '{{ env "XDG_CONFIG_HOME" }}/fastfetch'
    target: '{{ env "DOTFILES" }}/config/btop'
  - name: '{{ env "XDG_CONFIG_HOME" }}/oh-my-posh'
    target: '{{ env "DOTFILES" }}/config/oh-my-posh'
  - name: '{{ env "XDG_CONFIG_HOME" }}/yazi'
    target: '{{ env "DOTFILES" }}/config/yazi'

  # macOS launch daemons
  - name: "{{ .Home }}/Library/LaunchAgents/com.boldandbrad.CapsLockEscape.plist"
    target: '{{ env "DOTFILES" }}/util/macos/launch_agents/com.boldandbrad.CapsLockEscape.plist'
    if: eq .OS "darwin"
