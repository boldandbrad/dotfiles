#!/bin/zsh

# upgrade pip on all pyenv python versions
function pipup() {
  for VERSION in $(pyenv versions --bare) ; do
    echo "Upgrading pip in python ${VERSION}..."
    pyenv shell ${VERSION} ;
    pip install --upgrade pip ;
  done
}

# create python venv in the current directory
function pyvenv() {
  python -m venv --clear --copies .venv
  echo "New venv activated."
}

# initialize python project
function pyinit() {
  pyvenv
  echo "source .venv/bin/activate" >> .envrc
  direnv allow
  pip -q install --upgrade pip
  mkdir .vscode-oss
  cat > .vscode-oss/settings.json<< EOF
{
    "python.defaultInterpreterPath": ".venv/bin/python",
    "python.terminal.activateEnvironment": "false"
}
EOF
}

# initialize node project
function nodeinit() {
  echo 'export PATH="./node_modules/.bin:$PATH"' >> .envrc
  direnv allow
}

# update the created and modified date for all images in the current directory to match their exif create date
function exifupdate() {
  if type exiftool &>/dev/null; then
    for file in *; do
      exifdate="$(exiftool -p '$CreateDate' -d '%m/%d/%Y %H:%M:%S' "$file")"
      if [ ! -z $exifdate ]; then
        SetFile -d "$exifdate" "$file"
        SetFile -m "$exifdate" "$file"
        echo "Updated dates for $file"
      else
        echo "ERROR: File skipped. No exif date found for $file"
      fi
    done
  else
    echo "exiftool not found. Install with 'brew install exiftool'"
  fi
}

# cd to root dir of git project
function groot() {
  gitdir="$(git rev-parse --show-toplevel 2> /dev/null)"
  if [ -z $gitdir ]; then
    cd ..
  else
    cd $gitdir
  fi
}

# trash <files> - move files to trash
function trash() {
  mv "$@" ~/.Trash
}

# use iconsur to set application icons
function icons() {
  if type iconsur &>/dev/null; then
    sudo iconsur set /Applications/Canary\ Mail.app
    iconsur set /Applications/Firefox.app
    iconsur set /Applications/Geekbench\ 5.app
    sudo iconsur set /Applications/Magic\ Lasso.app
    iconsur set /Applications/Minecraft.app
    iconsur set /Applications/ProtonMail\ Bridge.app
    iconsur set /Applications/Spotify.app
  else
    echo "iconsur not found. Install with 'brew install iconsur'"
  fi
}
